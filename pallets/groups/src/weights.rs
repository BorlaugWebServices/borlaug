// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_groups
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2022-02-23, STEPS: `[50, ]`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// ./borlaug
// benchmark
// --dev
// --pallet
// pallet_groups
// --extrinsic
// *
// --steps=50
// --repeat=5
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./weights/groups/weights.rs
// --template=./frame-weight-template.hbs


#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_groups.
pub trait WeightInfo {
fn create_group(a: u32, m: u32, ) -> Weight;
fn update_group(a: u32, n: u32, o: u32, ) -> Weight;
fn create_sub_group(a: u32, m: u32, ) -> Weight;
fn update_sub_group(a: u32, n: u32, o: u32, ) -> Weight;
fn remove_group(m: u32, p: u32, ) -> Weight;
fn remove_sub_group(m: u32, p: u32, ) -> Weight;
fn execute(a: u32, ) -> Weight;
fn propose_execute(a: u32, ) -> Weight;
fn propose_proposed(a: u32, ) -> Weight;
fn vote(m: u32, ) -> Weight;
fn close_disapproved(m: u32, ) -> Weight;
fn close_approved(a: u32, m: u32, ) -> Weight;
fn veto_disapproved() -> Weight;
fn veto_approved(a: u32, ) -> Weight;
fn withdraw_funds_group() -> Weight;
fn withdraw_funds_sub_group() -> Weight;
fn send_funds_to_sub_group() -> Weight;
}

/// Weights for pallet_groups using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
		impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
				fn create_group(_a: u32, m: u32, ) -> Weight {
				(244_856_000 as Weight)
				// Standard Error: 31_000
				.saturating_add((22_111_000 as Weight).saturating_mul(m as Weight))
				.saturating_add(T::DbWeight::get().reads(4 as Weight))
				.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(m as Weight)))
				.saturating_add(T::DbWeight::get().writes(4 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(m as Weight)))
				}
				fn update_group(a: u32, n: u32, o: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 79_000
				.saturating_add((231_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 79_000
				.saturating_add((34_398_000 as Weight).saturating_mul(n as Weight))
				// Standard Error: 79_000
				.saturating_add((37_303_000 as Weight).saturating_mul(o as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(n as Weight)))
				.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(o as Weight)))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(n as Weight)))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(o as Weight)))
				}
				fn create_sub_group(a: u32, m: u32, ) -> Weight {
				(224_512_000 as Weight)
				// Standard Error: 30_000
				.saturating_add((17_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 30_000
				.saturating_add((27_898_000 as Weight).saturating_mul(m as Weight))
				.saturating_add(T::DbWeight::get().reads(5 as Weight))
				.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(m as Weight)))
				.saturating_add(T::DbWeight::get().writes(6 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(m as Weight)))
				}
				fn update_sub_group(a: u32, n: u32, o: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 76_000
				.saturating_add((238_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 76_000
				.saturating_add((36_917_000 as Weight).saturating_mul(n as Weight))
				// Standard Error: 76_000
				.saturating_add((39_286_000 as Weight).saturating_mul(o as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(n as Weight)))
				.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(o as Weight)))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(n as Weight)))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(o as Weight)))
				}
				fn remove_group(m: u32, p: u32, ) -> Weight {
				(77_142_000 as Weight)
				// Standard Error: 199_000
				.saturating_add((85_695_000 as Weight).saturating_mul(m as Weight))
				// Standard Error: 199_000
				.saturating_add((61_360_000 as Weight).saturating_mul(p as Weight))
				.saturating_add(T::DbWeight::get().reads(6 as Weight))
				.saturating_add(T::DbWeight::get().reads((2 as Weight).saturating_mul(m as Weight)))
				.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(p as Weight)))
				.saturating_add(T::DbWeight::get().writes(4 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(m as Weight)))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(p as Weight)))
				}
				fn remove_sub_group(m: u32, _p: u32, ) -> Weight {
				(260_672_000 as Weight)
				// Standard Error: 99_000
				.saturating_add((66_718_000 as Weight).saturating_mul(m as Weight))
				.saturating_add(T::DbWeight::get().reads(7 as Weight))
				.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(m as Weight)))
				.saturating_add(T::DbWeight::get().writes(5 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(m as Weight)))
				}
				fn execute(a: u32, ) -> Weight {
				(102_118_000 as Weight)
				// Standard Error: 0
				.saturating_add((4_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(2 as Weight))
				}
				fn propose_execute(a: u32, ) -> Weight {
				(151_555_000 as Weight)
				// Standard Error: 1_000
				.saturating_add((7_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(5 as Weight))
				.saturating_add(T::DbWeight::get().writes(3 as Weight))
				}
				fn propose_proposed(a: u32, ) -> Weight {
				(162_197_000 as Weight)
				// Standard Error: 0
				.saturating_add((4_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(5 as Weight))
				.saturating_add(T::DbWeight::get().writes(5 as Weight))
				}
				fn vote(m: u32, ) -> Weight {
				(130_634_000 as Weight)
				// Standard Error: 8_000
				.saturating_add((531_000 as Weight).saturating_mul(m as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				}
				fn close_disapproved(m: u32, ) -> Weight {
				(133_784_000 as Weight)
				// Standard Error: 6_000
				.saturating_add((469_000 as Weight).saturating_mul(m as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(2 as Weight))
				}
				fn close_approved(a: u32, m: u32, ) -> Weight {
				(135_880_000 as Weight)
				// Standard Error: 0
				.saturating_add((11_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 6_000
				.saturating_add((454_000 as Weight).saturating_mul(m as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(2 as Weight))
				}
				fn veto_disapproved() -> Weight {
				(161_480_000 as Weight)
				.saturating_add(T::DbWeight::get().reads(4 as Weight))
				.saturating_add(T::DbWeight::get().writes(3 as Weight))
				}
				fn veto_approved(a: u32, ) -> Weight {
				(164_145_000 as Weight)
				// Standard Error: 0
				.saturating_add((8_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(4 as Weight))
				.saturating_add(T::DbWeight::get().writes(3 as Weight))
				}
				fn withdraw_funds_group() -> Weight {
				(140_817_000 as Weight)
				.saturating_add(T::DbWeight::get().reads(2 as Weight))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				}
				fn withdraw_funds_sub_group() -> Weight {
				(143_290_000 as Weight)
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(2 as Weight))
				}
				fn send_funds_to_sub_group() -> Weight {
				(144_744_000 as Weight)
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(2 as Weight))
				}
				}

				// For backwards compatibility and tests
				impl WeightInfo for () {
				fn create_group(_a: u32, m: u32, ) -> Weight {
				(244_856_000 as Weight)
				// Standard Error: 31_000
				.saturating_add((22_111_000 as Weight).saturating_mul(m as Weight))
				.saturating_add(RocksDbWeight::get().reads(4 as Weight))
				.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(m as Weight)))
				.saturating_add(RocksDbWeight::get().writes(4 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(m as Weight)))
				}
				fn update_group(a: u32, n: u32, o: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 79_000
				.saturating_add((231_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 79_000
				.saturating_add((34_398_000 as Weight).saturating_mul(n as Weight))
				// Standard Error: 79_000
				.saturating_add((37_303_000 as Weight).saturating_mul(o as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(n as Weight)))
				.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(o as Weight)))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(n as Weight)))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(o as Weight)))
				}
				fn create_sub_group(a: u32, m: u32, ) -> Weight {
				(224_512_000 as Weight)
				// Standard Error: 30_000
				.saturating_add((17_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 30_000
				.saturating_add((27_898_000 as Weight).saturating_mul(m as Weight))
				.saturating_add(RocksDbWeight::get().reads(5 as Weight))
				.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(m as Weight)))
				.saturating_add(RocksDbWeight::get().writes(6 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(m as Weight)))
				}
				fn update_sub_group(a: u32, n: u32, o: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 76_000
				.saturating_add((238_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 76_000
				.saturating_add((36_917_000 as Weight).saturating_mul(n as Weight))
				// Standard Error: 76_000
				.saturating_add((39_286_000 as Weight).saturating_mul(o as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(n as Weight)))
				.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(o as Weight)))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(n as Weight)))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(o as Weight)))
				}
				fn remove_group(m: u32, p: u32, ) -> Weight {
				(77_142_000 as Weight)
				// Standard Error: 199_000
				.saturating_add((85_695_000 as Weight).saturating_mul(m as Weight))
				// Standard Error: 199_000
				.saturating_add((61_360_000 as Weight).saturating_mul(p as Weight))
				.saturating_add(RocksDbWeight::get().reads(6 as Weight))
				.saturating_add(RocksDbWeight::get().reads((2 as Weight).saturating_mul(m as Weight)))
				.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(p as Weight)))
				.saturating_add(RocksDbWeight::get().writes(4 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(m as Weight)))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(p as Weight)))
				}
				fn remove_sub_group(m: u32, _p: u32, ) -> Weight {
				(260_672_000 as Weight)
				// Standard Error: 99_000
				.saturating_add((66_718_000 as Weight).saturating_mul(m as Weight))
				.saturating_add(RocksDbWeight::get().reads(7 as Weight))
				.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(m as Weight)))
				.saturating_add(RocksDbWeight::get().writes(5 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(m as Weight)))
				}
				fn execute(a: u32, ) -> Weight {
				(102_118_000 as Weight)
				// Standard Error: 0
				.saturating_add((4_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(2 as Weight))
				}
				fn propose_execute(a: u32, ) -> Weight {
				(151_555_000 as Weight)
				// Standard Error: 1_000
				.saturating_add((7_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(5 as Weight))
				.saturating_add(RocksDbWeight::get().writes(3 as Weight))
				}
				fn propose_proposed(a: u32, ) -> Weight {
				(162_197_000 as Weight)
				// Standard Error: 0
				.saturating_add((4_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(5 as Weight))
				.saturating_add(RocksDbWeight::get().writes(5 as Weight))
				}
				fn vote(m: u32, ) -> Weight {
				(130_634_000 as Weight)
				// Standard Error: 8_000
				.saturating_add((531_000 as Weight).saturating_mul(m as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				}
				fn close_disapproved(m: u32, ) -> Weight {
				(133_784_000 as Weight)
				// Standard Error: 6_000
				.saturating_add((469_000 as Weight).saturating_mul(m as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(2 as Weight))
				}
				fn close_approved(a: u32, m: u32, ) -> Weight {
				(135_880_000 as Weight)
				// Standard Error: 0
				.saturating_add((11_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 6_000
				.saturating_add((454_000 as Weight).saturating_mul(m as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(2 as Weight))
				}
				fn veto_disapproved() -> Weight {
				(161_480_000 as Weight)
				.saturating_add(RocksDbWeight::get().reads(4 as Weight))
				.saturating_add(RocksDbWeight::get().writes(3 as Weight))
				}
				fn veto_approved(a: u32, ) -> Weight {
				(164_145_000 as Weight)
				// Standard Error: 0
				.saturating_add((8_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(4 as Weight))
				.saturating_add(RocksDbWeight::get().writes(3 as Weight))
				}
				fn withdraw_funds_group() -> Weight {
				(140_817_000 as Weight)
				.saturating_add(RocksDbWeight::get().reads(2 as Weight))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				}
				fn withdraw_funds_sub_group() -> Weight {
				(143_290_000 as Weight)
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(2 as Weight))
				}
				fn send_funds_to_sub_group() -> Weight {
				(144_744_000 as Weight)
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(2 as Weight))
				}
				}