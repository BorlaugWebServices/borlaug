// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_identity
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2022-03-21, STEPS: `[50, ]`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// ./borlaug
// benchmark
// --dev
// --pallet
// pallet_identity
// --extrinsic
// *
// --steps=50
// --repeat=5
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./weights/identity/weights.rs
// --template=./frame-weight-template.hbs


#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_identity.
pub trait WeightInfo {
fn register_did(a: u32, b: u32, c: u32, ) -> Weight;
fn register_did_for(a: u32, b: u32, c: u32, ) -> Weight;
fn add_did_properties(a: u32, b: u32, c: u32, ) -> Weight;
fn remove_did_properties(a: u32, b: u32, ) -> Weight;
fn manage_controllers(a: u32, b: u32, ) -> Weight;
fn authorize_claim_consumers(a: u32, ) -> Weight;
fn revoke_claim_consumers(a: u32, ) -> Weight;
fn authorize_claim_issuers(a: u32, ) -> Weight;
fn revoke_claim_issuers(a: u32, ) -> Weight;
fn make_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight;
fn create_catalog() -> Weight;
fn remove_catalog() -> Weight;
fn add_dids_to_catalog(a: u32, ) -> Weight;
fn remove_dids_from_catalog(a: u32, ) -> Weight;
}

/// Weights for pallet_identity using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
		impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
				fn register_did(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 193_000
				.saturating_add((652_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 183_000
				.saturating_add((2_755_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 42_000
				.saturating_add((9_288_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(5 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				}
				fn register_did_for(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 196_000
				.saturating_add((1_893_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 187_000
				.saturating_add((2_964_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 43_000
				.saturating_add((9_340_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(5 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				}
				fn add_did_properties(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 192_000
				.saturating_add((613_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 182_000
				.saturating_add((3_018_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 42_000
				.saturating_add((10_034_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				}
				fn remove_did_properties(a: u32, b: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 94_000
				.saturating_add((1_499_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 19_000
				.saturating_add((7_425_000 as Weight).saturating_mul(b as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(b as Weight)))
				}
				fn manage_controllers(a: u32, b: u32, ) -> Weight {
				(67_954_000 as Weight)
				// Standard Error: 119_000
				.saturating_add((11_743_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 119_000
				.saturating_add((11_001_000 as Weight).saturating_mul(b as Weight))
				.saturating_add(T::DbWeight::get().reads(2 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(b as Weight)))
				}
				fn authorize_claim_consumers(a: u32, ) -> Weight {
				(73_283_000 as Weight)
				// Standard Error: 59_000
				.saturating_add((11_419_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn revoke_claim_consumers(a: u32, ) -> Weight {
				(75_847_000 as Weight)
				// Standard Error: 71_000
				.saturating_add((11_078_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn authorize_claim_issuers(a: u32, ) -> Weight {
				(76_070_000 as Weight)
				// Standard Error: 73_000
				.saturating_add((11_550_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn revoke_claim_issuers(a: u32, ) -> Weight {
				(74_177_000 as Weight)
				// Standard Error: 82_000
				.saturating_add((10_804_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn make_claim(_a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 4_000
				.saturating_add((654_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 19_000
				.saturating_add((623_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 18_000
				.saturating_add((655_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(T::DbWeight::get().reads(4 as Weight))
				.saturating_add(T::DbWeight::get().writes(2 as Weight))
				}
				fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 19_000
				.saturating_add((2_232_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 19_000
				.saturating_add((2_720_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 87_000
				.saturating_add((548_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 83_000
				.saturating_add((802_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				}
				fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 10_000
				.saturating_add((1_732_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 46_000
				.saturating_add((1_925_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 44_000
				.saturating_add((2_040_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				}
				fn create_catalog() -> Weight {
				(85_969_000 as Weight)
				.saturating_add(T::DbWeight::get().reads(2 as Weight))
				.saturating_add(T::DbWeight::get().writes(2 as Weight))
				}
				fn remove_catalog() -> Weight {
				(82_979_000 as Weight)
				.saturating_add(T::DbWeight::get().reads(2 as Weight))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				}
				fn add_dids_to_catalog(a: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 53_000
				.saturating_add((30_233_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(a as Weight)))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn remove_dids_from_catalog(a: u32, ) -> Weight {
				(50_215_000 as Weight)
				// Standard Error: 23_000
				.saturating_add((10_067_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				}

				// For backwards compatibility and tests
				impl WeightInfo for () {
				fn register_did(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 193_000
				.saturating_add((652_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 183_000
				.saturating_add((2_755_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 42_000
				.saturating_add((9_288_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(5 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				}
				fn register_did_for(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 196_000
				.saturating_add((1_893_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 187_000
				.saturating_add((2_964_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 43_000
				.saturating_add((9_340_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(5 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				}
				fn add_did_properties(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 192_000
				.saturating_add((613_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 182_000
				.saturating_add((3_018_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 42_000
				.saturating_add((10_034_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				}
				fn remove_did_properties(a: u32, b: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 94_000
				.saturating_add((1_499_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 19_000
				.saturating_add((7_425_000 as Weight).saturating_mul(b as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(b as Weight)))
				}
				fn manage_controllers(a: u32, b: u32, ) -> Weight {
				(67_954_000 as Weight)
				// Standard Error: 119_000
				.saturating_add((11_743_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 119_000
				.saturating_add((11_001_000 as Weight).saturating_mul(b as Weight))
				.saturating_add(RocksDbWeight::get().reads(2 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(b as Weight)))
				}
				fn authorize_claim_consumers(a: u32, ) -> Weight {
				(73_283_000 as Weight)
				// Standard Error: 59_000
				.saturating_add((11_419_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn revoke_claim_consumers(a: u32, ) -> Weight {
				(75_847_000 as Weight)
				// Standard Error: 71_000
				.saturating_add((11_078_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn authorize_claim_issuers(a: u32, ) -> Weight {
				(76_070_000 as Weight)
				// Standard Error: 73_000
				.saturating_add((11_550_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn revoke_claim_issuers(a: u32, ) -> Weight {
				(74_177_000 as Weight)
				// Standard Error: 82_000
				.saturating_add((10_804_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn make_claim(_a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 4_000
				.saturating_add((654_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 19_000
				.saturating_add((623_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 18_000
				.saturating_add((655_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(RocksDbWeight::get().reads(4 as Weight))
				.saturating_add(RocksDbWeight::get().writes(2 as Weight))
				}
				fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 19_000
				.saturating_add((2_232_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 19_000
				.saturating_add((2_720_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 87_000
				.saturating_add((548_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 83_000
				.saturating_add((802_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				}
				fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 10_000
				.saturating_add((1_732_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 46_000
				.saturating_add((1_925_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 44_000
				.saturating_add((2_040_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				}
				fn create_catalog() -> Weight {
				(85_969_000 as Weight)
				.saturating_add(RocksDbWeight::get().reads(2 as Weight))
				.saturating_add(RocksDbWeight::get().writes(2 as Weight))
				}
				fn remove_catalog() -> Weight {
				(82_979_000 as Weight)
				.saturating_add(RocksDbWeight::get().reads(2 as Weight))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				}
				fn add_dids_to_catalog(a: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 53_000
				.saturating_add((30_233_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(a as Weight)))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn remove_dids_from_catalog(a: u32, ) -> Weight {
				(50_215_000 as Weight)
				// Standard Error: 23_000
				.saturating_add((10_067_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				}