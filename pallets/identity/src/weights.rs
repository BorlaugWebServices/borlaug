// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_identity
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-07-20, STEPS: `[50, ]`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// ./target/release/borlaug
// benchmark
// --dev
// --pallet
// pallet_identity
// --extrinsic
// *
// --steps=50
// --repeat=5
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./pallets/identity/src/weights.rs
// --template=./.maintain/frame-weight-template.hbs


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_identity.
pub trait WeightInfo {
	fn register_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
	fn register_did_for(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
	fn update_did(a: u32, b: u32, c: u32, d: u32, e: u32, f: u32, ) -> Weight;
	fn replace_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
	fn manage_controllers(a: u32, b: u32, ) -> Weight;
	fn authorize_claim_consumers(a: u32, ) -> Weight;
	fn revoke_claim_consumers(a: u32, ) -> Weight;
	fn authorize_claim_issuers(a: u32, ) -> Weight;
	fn revoke_claim_issuers(a: u32, ) -> Weight;
	fn make_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
	fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
}

/// Weights for pallet_identity using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn register_did(_a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 602_000
			.saturating_add((6_014_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 49_000
			.saturating_add((673_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 49_000
			.saturating_add((8_545_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn register_did_for(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 350_000
			.saturating_add((18_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 392_000
			.saturating_add((6_233_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 32_000
			.saturating_add((631_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 32_000
			.saturating_add((8_419_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn update_did(a: u32, b: u32, c: u32, d: u32, e: u32, f: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 401_000
			.saturating_add((1_400_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 450_000
			.saturating_add((8_869_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 36_000
			.saturating_add((1_150_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 36_000
			.saturating_add((9_671_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 450_000
			.saturating_add((2_313_000 as Weight).saturating_mul(e as Weight))
			// Standard Error: 36_000
			.saturating_add((6_072_000 as Weight).saturating_mul(f as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(f as Weight)))
	}
	fn replace_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 639_000
			.saturating_add((9_638_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 52_000
			.saturating_add((1_237_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 52_000
			.saturating_add((9_718_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 52_000
			.saturating_add((1_320_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn manage_controllers(a: u32, b: u32, ) -> Weight {
		(33_124_000 as Weight)
			// Standard Error: 127_000
			.saturating_add((9_108_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 127_000
			.saturating_add((9_347_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(b as Weight)))
	}
	fn authorize_claim_consumers(a: u32, ) -> Weight {
		(30_520_000 as Weight)
			// Standard Error: 97_000
			.saturating_add((9_575_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn revoke_claim_consumers(a: u32, ) -> Weight {
		(33_022_000 as Weight)
			// Standard Error: 48_000
			.saturating_add((8_969_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn authorize_claim_issuers(a: u32, ) -> Weight {
		(30_018_000 as Weight)
			// Standard Error: 129_000
			.saturating_add((9_487_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn revoke_claim_issuers(a: u32, ) -> Weight {
		(33_730_000 as Weight)
			// Standard Error: 59_000
			.saturating_add((8_946_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn make_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 106_000
			.saturating_add((941_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 9_000
			.saturating_add((1_284_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 118_000
			.saturating_add((1_699_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 9_000
			.saturating_add((893_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 33_000
			.saturating_add((1_588_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 33_000
			.saturating_add((3_699_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 408_000
			.saturating_add((275_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 33_000
			.saturating_add((1_691_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	fn register_did(_a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 602_000
			.saturating_add((6_014_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 49_000
			.saturating_add((673_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 49_000
			.saturating_add((8_545_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn register_did_for(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 350_000
			.saturating_add((18_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 392_000
			.saturating_add((6_233_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 32_000
			.saturating_add((631_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 32_000
			.saturating_add((8_419_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn update_did(a: u32, b: u32, c: u32, d: u32, e: u32, f: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 401_000
			.saturating_add((1_400_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 450_000
			.saturating_add((8_869_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 36_000
			.saturating_add((1_150_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 36_000
			.saturating_add((9_671_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 450_000
			.saturating_add((2_313_000 as Weight).saturating_mul(e as Weight))
			// Standard Error: 36_000
			.saturating_add((6_072_000 as Weight).saturating_mul(f as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(f as Weight)))
	}
	fn replace_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 639_000
			.saturating_add((9_638_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 52_000
			.saturating_add((1_237_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 52_000
			.saturating_add((9_718_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 52_000
			.saturating_add((1_320_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn manage_controllers(a: u32, b: u32, ) -> Weight {
		(33_124_000 as Weight)
			// Standard Error: 127_000
			.saturating_add((9_108_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 127_000
			.saturating_add((9_347_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(b as Weight)))
	}
	fn authorize_claim_consumers(a: u32, ) -> Weight {
		(30_520_000 as Weight)
			// Standard Error: 97_000
			.saturating_add((9_575_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn revoke_claim_consumers(a: u32, ) -> Weight {
		(33_022_000 as Weight)
			// Standard Error: 48_000
			.saturating_add((8_969_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn authorize_claim_issuers(a: u32, ) -> Weight {
		(30_018_000 as Weight)
			// Standard Error: 129_000
			.saturating_add((9_487_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn revoke_claim_issuers(a: u32, ) -> Weight {
		(33_730_000 as Weight)
			// Standard Error: 59_000
			.saturating_add((8_946_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn make_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 106_000
			.saturating_add((941_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 9_000
			.saturating_add((1_284_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 118_000
			.saturating_add((1_699_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 9_000
			.saturating_add((893_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 33_000
			.saturating_add((1_588_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 33_000
			.saturating_add((3_699_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 408_000
			.saturating_add((275_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 33_000
			.saturating_add((1_691_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
}
