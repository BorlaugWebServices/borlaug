
//! Autogenerated weights for pallet_audits
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 25.0.0
//! DATE: 2023-05-04, STEPS: `50`, REPEAT: `5`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Tims-PC`, CPU: `12th Gen Intel(R) Core(TM) i9-12900K`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./target/release/borlaug
// benchmark
// pallet
// --pallet
// pallet_audits
// --extrinsic
// *
// --steps=50
// --repeat=5
// --heap-pages=4096
// --output=./pallets/audits/src/weights.rs
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_audits.
pub trait WeightInfo {
fn create_audit() -> Weight;
fn delete_audit() -> Weight;
fn link_audit() -> Weight;
fn unlink_audit() -> Weight;
fn accept_audit() -> Weight;
fn assign_auditors_initial_assign() -> Weight;
fn assign_auditors_replace() -> Weight;
fn reject_audit() -> Weight;
fn complete_audit() -> Weight;
fn create_observation() -> Weight;
fn create_evidence(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
fn link_evidence() -> Weight;
fn unlink_evidence() -> Weight;
fn delete_evidence(a: u32, ) -> Weight;
}

/// Weights for pallet_audits using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
				impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
						/// Storage: Audits NextAuditId (r:1 w:1)
						/// Proof: Audits NextAuditId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
						/// Storage: Settings ExtrinsicExtra (r:1 w:0)
						/// Proof: Settings ExtrinsicExtra (max_values: None, max_size: Some(18), added: 2493, mode: MaxEncodedLen)
						/// Storage: Audits Audits (r:0 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits AuditsByCreator (r:0 w:1)
						/// Proof: Audits AuditsByCreator (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
						/// Storage: Audits AuditsByAuditingOrg (r:0 w:1)
						/// Proof: Audits AuditsByAuditingOrg (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
						/// Storage: Audits AuditByProposal (r:0 w:1)
						/// Proof: Audits AuditByProposal (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
						fn create_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `216`
						// Estimated: `4972`
						// Minimum execution time: 9_119_000 picoseconds.
						Weight::from_parts(9_542_000, 4972)
						.saturating_add(T::DbWeight::get().reads(2_u64))
						.saturating_add(T::DbWeight::get().writes(5_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits AuditsByCreator (r:0 w:1)
						/// Proof: Audits AuditsByCreator (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
						/// Storage: Audits AuditsByAuditingOrg (r:0 w:1)
						/// Proof: Audits AuditsByAuditingOrg (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
						/// Storage: Audits AuditByProposal (r:0 w:1)
						/// Proof: Audits AuditByProposal (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
						fn delete_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `287`
						// Estimated: `3587`
						// Minimum execution time: 8_386_000 picoseconds.
						Weight::from_parts(8_560_000, 3587)
						.saturating_add(T::DbWeight::get().reads(1_u64))
						.saturating_add(T::DbWeight::get().writes(4_u64))
						}
						/// Storage: Audits Audits (r:2 w:0)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits LinkedAudits (r:0 w:1)
						/// Proof: Audits LinkedAudits (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						fn link_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `485`
						// Estimated: `6184`
						// Minimum execution time: 9_954_000 picoseconds.
						Weight::from_parts(10_225_000, 6184)
						.saturating_add(T::DbWeight::get().reads(2_u64))
						.saturating_add(T::DbWeight::get().writes(1_u64))
						}
						/// Storage: Audits Audits (r:2 w:0)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits LinkedAudits (r:0 w:1)
						/// Proof: Audits LinkedAudits (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						fn unlink_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `518`
						// Estimated: `6184`
						// Minimum execution time: 8_964_000 picoseconds.
						Weight::from_parts(9_159_000, 6184)
						.saturating_add(T::DbWeight::get().reads(2_u64))
						.saturating_add(T::DbWeight::get().writes(1_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						fn accept_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `287`
						// Estimated: `3587`
						// Minimum execution time: 7_212_000 picoseconds.
						Weight::from_parts(7_410_000, 3587)
						.saturating_add(T::DbWeight::get().reads(1_u64))
						.saturating_add(T::DbWeight::get().writes(1_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits AuditsByAuditors (r:0 w:1)
						/// Proof: Audits AuditsByAuditors (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
						fn assign_auditors_initial_assign() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `287`
						// Estimated: `3587`
						// Minimum execution time: 8_058_000 picoseconds.
						Weight::from_parts(8_465_000, 3587)
						.saturating_add(T::DbWeight::get().reads(1_u64))
						.saturating_add(T::DbWeight::get().writes(2_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits AuditsByAuditors (r:0 w:2)
						/// Proof: Audits AuditsByAuditors (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
						fn assign_auditors_replace() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `352`
						// Estimated: `3587`
						// Minimum execution time: 8_514_000 picoseconds.
						Weight::from_parts(8_780_000, 3587)
						.saturating_add(T::DbWeight::get().reads(1_u64))
						.saturating_add(T::DbWeight::get().writes(3_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						fn reject_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `287`
						// Estimated: `3587`
						// Minimum execution time: 6_932_000 picoseconds.
						Weight::from_parts(7_339_000, 3587)
						.saturating_add(T::DbWeight::get().reads(1_u64))
						.saturating_add(T::DbWeight::get().writes(1_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						fn complete_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `408`
						// Estimated: `3587`
						// Minimum execution time: 7_706_000 picoseconds.
						Weight::from_parts(8_058_000, 3587)
						.saturating_add(T::DbWeight::get().reads(1_u64))
						.saturating_add(T::DbWeight::get().writes(1_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Settings ExtrinsicExtra (r:1 w:0)
						/// Proof: Settings ExtrinsicExtra (max_values: None, max_size: Some(18), added: 2493, mode: MaxEncodedLen)
						/// Storage: Audits NextObservationId (r:1 w:1)
						/// Proof: Audits NextObservationId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
						/// Storage: Audits Observations (r:0 w:1)
						/// Proof: Audits Observations (max_values: None, max_size: Some(83), added: 2558, mode: MaxEncodedLen)
						/// Storage: Audits ObservationByProposal (r:0 w:1)
						/// Proof: Audits ObservationByProposal (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
						fn create_observation() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `526`
						// Estimated: `8559`
						// Minimum execution time: 12_569_000 picoseconds.
						Weight::from_parts(13_414_000, 8559)
						.saturating_add(T::DbWeight::get().reads(3_u64))
						.saturating_add(T::DbWeight::get().writes(4_u64))
						}
						/// Storage: Audits Audits (r:1 w:0)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Settings ExtrinsicExtra (r:1 w:0)
						/// Proof: Settings ExtrinsicExtra (max_values: None, max_size: Some(18), added: 2493, mode: MaxEncodedLen)
						/// Storage: Audits NextEvidenceId (r:1 w:1)
						/// Proof: Audits NextEvidenceId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceByProposal (r:0 w:1)
						/// Proof: Audits EvidenceByProposal (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
						/// Storage: Audits Evidences (r:0 w:1)
						/// Proof: Audits Evidences (max_values: None, max_size: Some(853), added: 3328, mode: MaxEncodedLen)
						/// The range of component `a` is `[1, 100]`.
						/// The range of component `b` is `[1, 100]`.
						/// The range of component `c` is `[1, 500]`.
						/// The range of component `d` is `[1, 100]`.
						fn create_evidence(a: u32, _b: u32, c: u32, d: u32, ) -> Weight {
						// Proof Size summary in bytes:
						// Measured: `583`
						// Estimated: `8559`
						// Minimum execution time: 12_013_000 picoseconds.
						Weight::from_parts(13_299_601, 8559)
						// Standard Error: 2_616
						.saturating_add(Weight::from_parts(16, 0).saturating_mul(a.into()))
						// Standard Error: 520
						.saturating_add(Weight::from_parts(565, 0).saturating_mul(c.into()))
						// Standard Error: 2_616
						.saturating_add(Weight::from_parts(137, 0).saturating_mul(d.into()))
						.saturating_add(T::DbWeight::get().reads(3_u64))
						.saturating_add(T::DbWeight::get().writes(3_u64))
						}
						/// Storage: Audits Audits (r:1 w:0)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits Observations (r:1 w:0)
						/// Proof: Audits Observations (max_values: None, max_size: Some(83), added: 2558, mode: MaxEncodedLen)
						/// Storage: Audits Evidences (r:1 w:0)
						/// Proof: Audits Evidences (max_values: None, max_size: Some(853), added: 3328, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceLinksByObservation (r:0 w:1)
						/// Proof: Audits EvidenceLinksByObservation (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceLinksByEvidence (r:0 w:1)
						/// Proof: Audits EvidenceLinksByEvidence (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						fn link_evidence() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `640`
						// Estimated: `11453`
						// Minimum execution time: 12_159_000 picoseconds.
						Weight::from_parts(12_704_000, 11453)
						.saturating_add(T::DbWeight::get().reads(3_u64))
						.saturating_add(T::DbWeight::get().writes(2_u64))
						}
						/// Storage: Audits Audits (r:1 w:0)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits Observations (r:1 w:0)
						/// Proof: Audits Observations (max_values: None, max_size: Some(83), added: 2558, mode: MaxEncodedLen)
						/// Storage: Audits Evidences (r:1 w:0)
						/// Proof: Audits Evidences (max_values: None, max_size: Some(853), added: 3328, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceLinksByObservation (r:0 w:1)
						/// Proof: Audits EvidenceLinksByObservation (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceLinksByEvidence (r:0 w:1)
						/// Proof: Audits EvidenceLinksByEvidence (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						fn unlink_evidence() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `707`
						// Estimated: `11453`
						// Minimum execution time: 12_019_000 picoseconds.
						Weight::from_parts(14_367_000, 11453)
						.saturating_add(T::DbWeight::get().reads(3_u64))
						.saturating_add(T::DbWeight::get().writes(2_u64))
						}
						/// Storage: Audits Audits (r:1 w:0)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits Evidences (r:1 w:1)
						/// Proof: Audits Evidences (max_values: None, max_size: Some(853), added: 3328, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceLinksByEvidence (r:51 w:50)
						/// Proof: Audits EvidenceLinksByEvidence (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceByProposal (r:0 w:1)
						/// Proof: Audits EvidenceByProposal (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceLinksByObservation (r:0 w:50)
						/// Proof: Audits EvidenceLinksByObservation (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						/// The range of component `a` is `[1, 50]`.
						fn delete_evidence(a: u32, ) -> Weight {
						// Proof Size summary in bytes:
						// Measured: `1021 + a * (23 ±0)`
						// Estimated: `11410 + a * (2515 ±0)`
						// Minimum execution time: 16_349_000 picoseconds.
						Weight::from_parts(15_144_442, 11410)
						// Standard Error: 73_704
						.saturating_add(Weight::from_parts(2_937_357, 0).saturating_mul(a.into()))
						.saturating_add(T::DbWeight::get().reads(3_u64))
						.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(a.into())))
						.saturating_add(T::DbWeight::get().writes(2_u64))
						.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(a.into())))
						.saturating_add(Weight::from_parts(0, 2515).saturating_mul(a.into()))
						}
						}

						// For backwards compatibility and tests
						impl WeightInfo for () {
						/// Storage: Audits NextAuditId (r:1 w:1)
						/// Proof: Audits NextAuditId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
						/// Storage: Settings ExtrinsicExtra (r:1 w:0)
						/// Proof: Settings ExtrinsicExtra (max_values: None, max_size: Some(18), added: 2493, mode: MaxEncodedLen)
						/// Storage: Audits Audits (r:0 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits AuditsByCreator (r:0 w:1)
						/// Proof: Audits AuditsByCreator (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
						/// Storage: Audits AuditsByAuditingOrg (r:0 w:1)
						/// Proof: Audits AuditsByAuditingOrg (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
						/// Storage: Audits AuditByProposal (r:0 w:1)
						/// Proof: Audits AuditByProposal (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
						fn create_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `216`
						// Estimated: `4972`
						// Minimum execution time: 9_119_000 picoseconds.
						Weight::from_parts(9_542_000, 4972)
						.saturating_add(RocksDbWeight::get().reads(2_u64))
						.saturating_add(RocksDbWeight::get().writes(5_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits AuditsByCreator (r:0 w:1)
						/// Proof: Audits AuditsByCreator (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
						/// Storage: Audits AuditsByAuditingOrg (r:0 w:1)
						/// Proof: Audits AuditsByAuditingOrg (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
						/// Storage: Audits AuditByProposal (r:0 w:1)
						/// Proof: Audits AuditByProposal (max_values: None, max_size: Some(24), added: 2499, mode: MaxEncodedLen)
						fn delete_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `287`
						// Estimated: `3587`
						// Minimum execution time: 8_386_000 picoseconds.
						Weight::from_parts(8_560_000, 3587)
						.saturating_add(RocksDbWeight::get().reads(1_u64))
						.saturating_add(RocksDbWeight::get().writes(4_u64))
						}
						/// Storage: Audits Audits (r:2 w:0)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits LinkedAudits (r:0 w:1)
						/// Proof: Audits LinkedAudits (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						fn link_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `485`
						// Estimated: `6184`
						// Minimum execution time: 9_954_000 picoseconds.
						Weight::from_parts(10_225_000, 6184)
						.saturating_add(RocksDbWeight::get().reads(2_u64))
						.saturating_add(RocksDbWeight::get().writes(1_u64))
						}
						/// Storage: Audits Audits (r:2 w:0)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits LinkedAudits (r:0 w:1)
						/// Proof: Audits LinkedAudits (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						fn unlink_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `518`
						// Estimated: `6184`
						// Minimum execution time: 8_964_000 picoseconds.
						Weight::from_parts(9_159_000, 6184)
						.saturating_add(RocksDbWeight::get().reads(2_u64))
						.saturating_add(RocksDbWeight::get().writes(1_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						fn accept_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `287`
						// Estimated: `3587`
						// Minimum execution time: 7_212_000 picoseconds.
						Weight::from_parts(7_410_000, 3587)
						.saturating_add(RocksDbWeight::get().reads(1_u64))
						.saturating_add(RocksDbWeight::get().writes(1_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits AuditsByAuditors (r:0 w:1)
						/// Proof: Audits AuditsByAuditors (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
						fn assign_auditors_initial_assign() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `287`
						// Estimated: `3587`
						// Minimum execution time: 8_058_000 picoseconds.
						Weight::from_parts(8_465_000, 3587)
						.saturating_add(RocksDbWeight::get().reads(1_u64))
						.saturating_add(RocksDbWeight::get().writes(2_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits AuditsByAuditors (r:0 w:2)
						/// Proof: Audits AuditsByAuditors (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
						fn assign_auditors_replace() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `352`
						// Estimated: `3587`
						// Minimum execution time: 8_514_000 picoseconds.
						Weight::from_parts(8_780_000, 3587)
						.saturating_add(RocksDbWeight::get().reads(1_u64))
						.saturating_add(RocksDbWeight::get().writes(3_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						fn reject_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `287`
						// Estimated: `3587`
						// Minimum execution time: 6_932_000 picoseconds.
						Weight::from_parts(7_339_000, 3587)
						.saturating_add(RocksDbWeight::get().reads(1_u64))
						.saturating_add(RocksDbWeight::get().writes(1_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						fn complete_audit() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `408`
						// Estimated: `3587`
						// Minimum execution time: 7_706_000 picoseconds.
						Weight::from_parts(8_058_000, 3587)
						.saturating_add(RocksDbWeight::get().reads(1_u64))
						.saturating_add(RocksDbWeight::get().writes(1_u64))
						}
						/// Storage: Audits Audits (r:1 w:1)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Settings ExtrinsicExtra (r:1 w:0)
						/// Proof: Settings ExtrinsicExtra (max_values: None, max_size: Some(18), added: 2493, mode: MaxEncodedLen)
						/// Storage: Audits NextObservationId (r:1 w:1)
						/// Proof: Audits NextObservationId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
						/// Storage: Audits Observations (r:0 w:1)
						/// Proof: Audits Observations (max_values: None, max_size: Some(83), added: 2558, mode: MaxEncodedLen)
						/// Storage: Audits ObservationByProposal (r:0 w:1)
						/// Proof: Audits ObservationByProposal (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
						fn create_observation() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `526`
						// Estimated: `8559`
						// Minimum execution time: 12_569_000 picoseconds.
						Weight::from_parts(13_414_000, 8559)
						.saturating_add(RocksDbWeight::get().reads(3_u64))
						.saturating_add(RocksDbWeight::get().writes(4_u64))
						}
						/// Storage: Audits Audits (r:1 w:0)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Settings ExtrinsicExtra (r:1 w:0)
						/// Proof: Settings ExtrinsicExtra (max_values: None, max_size: Some(18), added: 2493, mode: MaxEncodedLen)
						/// Storage: Audits NextEvidenceId (r:1 w:1)
						/// Proof: Audits NextEvidenceId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceByProposal (r:0 w:1)
						/// Proof: Audits EvidenceByProposal (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
						/// Storage: Audits Evidences (r:0 w:1)
						/// Proof: Audits Evidences (max_values: None, max_size: Some(853), added: 3328, mode: MaxEncodedLen)
						/// The range of component `a` is `[1, 100]`.
						/// The range of component `b` is `[1, 100]`.
						/// The range of component `c` is `[1, 500]`.
						/// The range of component `d` is `[1, 100]`.
						fn create_evidence(a: u32, _b: u32, c: u32, d: u32, ) -> Weight {
						// Proof Size summary in bytes:
						// Measured: `583`
						// Estimated: `8559`
						// Minimum execution time: 12_013_000 picoseconds.
						Weight::from_parts(13_299_601, 8559)
						// Standard Error: 2_616
						.saturating_add(Weight::from_parts(16, 0).saturating_mul(a.into()))
						// Standard Error: 520
						.saturating_add(Weight::from_parts(565, 0).saturating_mul(c.into()))
						// Standard Error: 2_616
						.saturating_add(Weight::from_parts(137, 0).saturating_mul(d.into()))
						.saturating_add(RocksDbWeight::get().reads(3_u64))
						.saturating_add(RocksDbWeight::get().writes(3_u64))
						}
						/// Storage: Audits Audits (r:1 w:0)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits Observations (r:1 w:0)
						/// Proof: Audits Observations (max_values: None, max_size: Some(83), added: 2558, mode: MaxEncodedLen)
						/// Storage: Audits Evidences (r:1 w:0)
						/// Proof: Audits Evidences (max_values: None, max_size: Some(853), added: 3328, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceLinksByObservation (r:0 w:1)
						/// Proof: Audits EvidenceLinksByObservation (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceLinksByEvidence (r:0 w:1)
						/// Proof: Audits EvidenceLinksByEvidence (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						fn link_evidence() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `640`
						// Estimated: `11453`
						// Minimum execution time: 12_159_000 picoseconds.
						Weight::from_parts(12_704_000, 11453)
						.saturating_add(RocksDbWeight::get().reads(3_u64))
						.saturating_add(RocksDbWeight::get().writes(2_u64))
						}
						/// Storage: Audits Audits (r:1 w:0)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits Observations (r:1 w:0)
						/// Proof: Audits Observations (max_values: None, max_size: Some(83), added: 2558, mode: MaxEncodedLen)
						/// Storage: Audits Evidences (r:1 w:0)
						/// Proof: Audits Evidences (max_values: None, max_size: Some(853), added: 3328, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceLinksByObservation (r:0 w:1)
						/// Proof: Audits EvidenceLinksByObservation (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceLinksByEvidence (r:0 w:1)
						/// Proof: Audits EvidenceLinksByEvidence (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						fn unlink_evidence() -> Weight {
						// Proof Size summary in bytes:
						// Measured: `707`
						// Estimated: `11453`
						// Minimum execution time: 12_019_000 picoseconds.
						Weight::from_parts(14_367_000, 11453)
						.saturating_add(RocksDbWeight::get().reads(3_u64))
						.saturating_add(RocksDbWeight::get().writes(2_u64))
						}
						/// Storage: Audits Audits (r:1 w:0)
						/// Proof: Audits Audits (max_values: None, max_size: Some(122), added: 2597, mode: MaxEncodedLen)
						/// Storage: Audits Evidences (r:1 w:1)
						/// Proof: Audits Evidences (max_values: None, max_size: Some(853), added: 3328, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceLinksByEvidence (r:51 w:50)
						/// Proof: Audits EvidenceLinksByEvidence (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceByProposal (r:0 w:1)
						/// Proof: Audits EvidenceByProposal (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
						/// Storage: Audits EvidenceLinksByObservation (r:0 w:50)
						/// Proof: Audits EvidenceLinksByObservation (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
						/// The range of component `a` is `[1, 50]`.
						fn delete_evidence(a: u32, ) -> Weight {
						// Proof Size summary in bytes:
						// Measured: `1021 + a * (23 ±0)`
						// Estimated: `11410 + a * (2515 ±0)`
						// Minimum execution time: 16_349_000 picoseconds.
						Weight::from_parts(15_144_442, 11410)
						// Standard Error: 73_704
						.saturating_add(Weight::from_parts(2_937_357, 0).saturating_mul(a.into()))
						.saturating_add(RocksDbWeight::get().reads(3_u64))
						.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(a.into())))
						.saturating_add(RocksDbWeight::get().writes(2_u64))
						.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(a.into())))
						.saturating_add(Weight::from_parts(0, 2515).saturating_mul(a.into()))
						}
						}