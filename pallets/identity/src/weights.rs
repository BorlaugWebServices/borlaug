// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_identity
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-10-28, STEPS: `[30, ]`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// ./target/release/borlaug
// benchmark
// --dev
// --pallet
// pallet_identity
// --extrinsic
// *
// --steps=30
// --repeat=5
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./pallets/identity/src/weights.rs
// --template=./.maintain/frame-weight-template.hbs


#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]
#![allow(clippy::many_single_char_names)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_identity.
pub trait WeightInfo {
fn register_did(a: u32, b: u32, c: u32, ) -> Weight;
fn register_did_for(a: u32, b: u32, c: u32, ) -> Weight;
fn add_did_properties(a: u32, b: u32, c: u32, ) -> Weight;
fn remove_did_properties(a: u32, b: u32, ) -> Weight;
fn manage_controllers(a: u32, b: u32, ) -> Weight;
fn authorize_claim_consumers(a: u32, ) -> Weight;
fn revoke_claim_consumers(a: u32, ) -> Weight;
fn authorize_claim_issuers(a: u32, ) -> Weight;
fn revoke_claim_issuers(a: u32, ) -> Weight;
fn make_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight;
fn create_catalog() -> Weight;
fn remove_catalog() -> Weight;
fn add_dids_to_catalog(a: u32, ) -> Weight;
fn remove_dids_from_catalog(a: u32, ) -> Weight;
}

/// Weights for pallet_identity using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
		impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
				fn register_did(_a: u32, _b: u32, c: u32, ) -> Weight {
				(88_569_000 as Weight)
				// Standard Error: 104_000
				.saturating_add((8_303_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(5 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				}
				fn register_did_for(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 349_000
				.saturating_add((1_412_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 331_000
				.saturating_add((1_866_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 66_000
				.saturating_add((8_372_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(5 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				}
				fn add_did_properties(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 393_000
				.saturating_add((730_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 373_000
				.saturating_add((3_028_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 74_000
				.saturating_add((9_208_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				}
				fn remove_did_properties(a: u32, b: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 209_000
				.saturating_add((2_122_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 39_000
				.saturating_add((6_492_000 as Weight).saturating_mul(b as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(b as Weight)))
				}
				fn manage_controllers(a: u32, b: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 245_000
				.saturating_add((10_390_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 245_000
				.saturating_add((10_406_000 as Weight).saturating_mul(b as Weight))
				.saturating_add(T::DbWeight::get().reads(2 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(b as Weight)))
				}
				fn authorize_claim_consumers(a: u32, ) -> Weight {
				(37_170_000 as Weight)
				// Standard Error: 104_000
				.saturating_add((9_733_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn revoke_claim_consumers(a: u32, ) -> Weight {
				(36_033_000 as Weight)
				// Standard Error: 58_000
				.saturating_add((9_598_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn authorize_claim_issuers(a: u32, ) -> Weight {
				(32_763_000 as Weight)
				// Standard Error: 82_000
				.saturating_add((9_876_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn revoke_claim_issuers(a: u32, ) -> Weight {
				(36_061_000 as Weight)
				// Standard Error: 69_000
				.saturating_add((9_570_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn make_claim(_a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 10_000
				.saturating_add((707_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 54_000
				.saturating_add((793_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 51_000
				.saturating_add((837_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(T::DbWeight::get().reads(4 as Weight))
				.saturating_add(T::DbWeight::get().writes(2 as Weight))
				}
				fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 24_000
				.saturating_add((1_568_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 24_000
				.saturating_add((2_375_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 127_000
				.saturating_add((814_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 120_000
				.saturating_add((1_373_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				}
				fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 16_000
				.saturating_add((1_741_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 86_000
				.saturating_add((2_517_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 82_000
				.saturating_add((2_352_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				}
				fn create_catalog() -> Weight {
				(36_900_000 as Weight)
				.saturating_add(T::DbWeight::get().reads(2 as Weight))
				.saturating_add(T::DbWeight::get().writes(2 as Weight))
				}
				fn remove_catalog() -> Weight {
				(40_800_000 as Weight)
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				}
				fn add_dids_to_catalog(a: u32, ) -> Weight {
				(31_866_000 as Weight)
				// Standard Error: 36_000
				.saturating_add((4_442_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
				}
				fn remove_dids_from_catalog(a: u32, ) -> Weight {
				(50_477_000 as Weight)
				// Standard Error: 27_000
				.saturating_add((4_356_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
				}
				}

				// For backwards compatibility and tests
				impl WeightInfo for () {
				fn register_did(_a: u32, _b: u32, c: u32, ) -> Weight {
				(88_569_000 as Weight)
				// Standard Error: 104_000
				.saturating_add((8_303_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(5 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				}
				fn register_did_for(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 349_000
				.saturating_add((1_412_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 331_000
				.saturating_add((1_866_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 66_000
				.saturating_add((8_372_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(5 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				}
				fn add_did_properties(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 393_000
				.saturating_add((730_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 373_000
				.saturating_add((3_028_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 74_000
				.saturating_add((9_208_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				}
				fn remove_did_properties(a: u32, b: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 209_000
				.saturating_add((2_122_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 39_000
				.saturating_add((6_492_000 as Weight).saturating_mul(b as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(b as Weight)))
				}
				fn manage_controllers(a: u32, b: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 245_000
				.saturating_add((10_390_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 245_000
				.saturating_add((10_406_000 as Weight).saturating_mul(b as Weight))
				.saturating_add(RocksDbWeight::get().reads(2 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(b as Weight)))
				}
				fn authorize_claim_consumers(a: u32, ) -> Weight {
				(37_170_000 as Weight)
				// Standard Error: 104_000
				.saturating_add((9_733_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn revoke_claim_consumers(a: u32, ) -> Weight {
				(36_033_000 as Weight)
				// Standard Error: 58_000
				.saturating_add((9_598_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn authorize_claim_issuers(a: u32, ) -> Weight {
				(32_763_000 as Weight)
				// Standard Error: 82_000
				.saturating_add((9_876_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn revoke_claim_issuers(a: u32, ) -> Weight {
				(36_061_000 as Weight)
				// Standard Error: 69_000
				.saturating_add((9_570_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn make_claim(_a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 10_000
				.saturating_add((707_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 54_000
				.saturating_add((793_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 51_000
				.saturating_add((837_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(RocksDbWeight::get().reads(4 as Weight))
				.saturating_add(RocksDbWeight::get().writes(2 as Weight))
				}
				fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 24_000
				.saturating_add((1_568_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 24_000
				.saturating_add((2_375_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 127_000
				.saturating_add((814_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 120_000
				.saturating_add((1_373_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				}
				fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 16_000
				.saturating_add((1_741_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 86_000
				.saturating_add((2_517_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 82_000
				.saturating_add((2_352_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				}
				fn create_catalog() -> Weight {
				(36_900_000 as Weight)
				.saturating_add(RocksDbWeight::get().reads(2 as Weight))
				.saturating_add(RocksDbWeight::get().writes(2 as Weight))
				}
				fn remove_catalog() -> Weight {
				(40_800_000 as Weight)
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				}
				fn add_dids_to_catalog(a: u32, ) -> Weight {
				(31_866_000 as Weight)
				// Standard Error: 36_000
				.saturating_add((4_442_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
				}
				fn remove_dids_from_catalog(a: u32, ) -> Weight {
				(50_477_000 as Weight)
				// Standard Error: 27_000
				.saturating_add((4_356_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
				}
				}