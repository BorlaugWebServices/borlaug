// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_identity
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-10-25, STEPS: `[50, ]`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// ./borlaug
// benchmark
// --dev
// --pallet
// pallet_identity
// --extrinsic
// *
// --steps=50
// --repeat=5
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./weights/identity/weights.rs
// --template=./frame-weight-template.hbs


#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_identity.
pub trait WeightInfo {
fn register_did(b: u32, c: u32, d: u32, ) -> Weight;
fn register_did_for(b: u32, c: u32, d: u32, ) -> Weight;
fn update_did(b: u32, c: u32, d: u32, e: u32, f: u32, ) -> Weight;
fn replace_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
fn manage_controllers(a: u32, b: u32, ) -> Weight;
fn authorize_claim_consumers(a: u32, ) -> Weight;
fn revoke_claim_consumers(a: u32, ) -> Weight;
fn authorize_claim_issuers(a: u32, ) -> Weight;
fn revoke_claim_issuers(a: u32, ) -> Weight;
fn make_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight;
fn create_catalog() -> Weight;
fn remove_catalog() -> Weight;
fn add_dids_to_catalog(a: u32, ) -> Weight;
fn remove_dids_from_catalog(a: u32, ) -> Weight;
}

/// Weights for pallet_identity using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
		impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
				fn register_did(b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 200_000
				.saturating_add((6_712_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 198_000
				.saturating_add((4_203_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 100_000
				.saturating_add((19_558_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(5 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
				}
				fn register_did_for(b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 199_000
				.saturating_add((6_730_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 197_000
				.saturating_add((4_267_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 99_000
				.saturating_add((19_789_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(5 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
				}
				fn update_did(b: u32, c: u32, d: u32, e: u32, f: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 153_000
				.saturating_add((8_368_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 152_000
				.saturating_add((5_602_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 77_000
				.saturating_add((22_117_000 as Weight).saturating_mul(d as Weight))
				// Standard Error: 153_000
				.saturating_add((5_500_000 as Weight).saturating_mul(e as Weight))
				// Standard Error: 77_000
				.saturating_add((13_898_000 as Weight).saturating_mul(f as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(f as Weight)))
				}
				fn replace_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 156_000
				.saturating_add((8_638_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 154_000
				.saturating_add((5_890_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 78_000
				.saturating_add((22_227_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 78_000
				.saturating_add((7_182_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
				}
				fn manage_controllers(a: u32, b: u32, ) -> Weight {
				(108_693_000 as Weight)
				// Standard Error: 51_000
				.saturating_add((16_540_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 51_000
				.saturating_add((16_450_000 as Weight).saturating_mul(b as Weight))
				.saturating_add(T::DbWeight::get().reads(2 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(b as Weight)))
				}
				fn authorize_claim_consumers(a: u32, ) -> Weight {
				(93_638_000 as Weight)
				// Standard Error: 37_000
				.saturating_add((16_593_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn revoke_claim_consumers(a: u32, ) -> Weight {
				(92_435_000 as Weight)
				// Standard Error: 32_000
				.saturating_add((16_259_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn authorize_claim_issuers(a: u32, ) -> Weight {
				(92_367_000 as Weight)
				// Standard Error: 42_000
				.saturating_add((16_762_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn revoke_claim_issuers(a: u32, ) -> Weight {
				(92_346_000 as Weight)
				// Standard Error: 38_000
				.saturating_add((16_396_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn make_claim(_a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 48_000
				.saturating_add((3_927_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 49_000
				.saturating_add((1_416_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 48_000
				.saturating_add((1_409_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(T::DbWeight::get().reads(4 as Weight))
				.saturating_add(T::DbWeight::get().writes(2 as Weight))
				}
				fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 30_000
				.saturating_add((2_838_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 30_000
				.saturating_add((7_497_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 30_000
				.saturating_add((1_689_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 30_000
				.saturating_add((1_780_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				}
				fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 53_000
				.saturating_add((10_063_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 53_000
				.saturating_add((4_462_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 53_000
				.saturating_add((4_256_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(T::DbWeight::get().reads(3 as Weight))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				}
				fn create_catalog() -> Weight {
				(103_314_000 as Weight)
				.saturating_add(T::DbWeight::get().reads(2 as Weight))
				.saturating_add(T::DbWeight::get().writes(2 as Weight))
				}
				fn remove_catalog() -> Weight {
				(118_936_000 as Weight)
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes(1 as Weight))
				}
				fn add_dids_to_catalog(a: u32, ) -> Weight {
				(90_689_000 as Weight)
				// Standard Error: 11_000
				.saturating_add((7_644_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
				}
				fn remove_dids_from_catalog(a: u32, ) -> Weight {
				(114_819_000 as Weight)
				// Standard Error: 11_000
				.saturating_add((7_645_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(T::DbWeight::get().reads(1 as Weight))
				.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
				}
				}

				// For backwards compatibility and tests
				impl WeightInfo for () {
				fn register_did(b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 200_000
				.saturating_add((6_712_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 198_000
				.saturating_add((4_203_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 100_000
				.saturating_add((19_558_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(5 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
				}
				fn register_did_for(b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 199_000
				.saturating_add((6_730_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 197_000
				.saturating_add((4_267_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 99_000
				.saturating_add((19_789_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(5 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
				}
				fn update_did(b: u32, c: u32, d: u32, e: u32, f: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 153_000
				.saturating_add((8_368_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 152_000
				.saturating_add((5_602_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 77_000
				.saturating_add((22_117_000 as Weight).saturating_mul(d as Weight))
				// Standard Error: 153_000
				.saturating_add((5_500_000 as Weight).saturating_mul(e as Weight))
				// Standard Error: 77_000
				.saturating_add((13_898_000 as Weight).saturating_mul(f as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(f as Weight)))
				}
				fn replace_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 156_000
				.saturating_add((8_638_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 154_000
				.saturating_add((5_890_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 78_000
				.saturating_add((22_227_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 78_000
				.saturating_add((7_182_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
				}
				fn manage_controllers(a: u32, b: u32, ) -> Weight {
				(108_693_000 as Weight)
				// Standard Error: 51_000
				.saturating_add((16_540_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 51_000
				.saturating_add((16_450_000 as Weight).saturating_mul(b as Weight))
				.saturating_add(RocksDbWeight::get().reads(2 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(b as Weight)))
				}
				fn authorize_claim_consumers(a: u32, ) -> Weight {
				(93_638_000 as Weight)
				// Standard Error: 37_000
				.saturating_add((16_593_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn revoke_claim_consumers(a: u32, ) -> Weight {
				(92_435_000 as Weight)
				// Standard Error: 32_000
				.saturating_add((16_259_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn authorize_claim_issuers(a: u32, ) -> Weight {
				(92_367_000 as Weight)
				// Standard Error: 42_000
				.saturating_add((16_762_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn revoke_claim_issuers(a: u32, ) -> Weight {
				(92_346_000 as Weight)
				// Standard Error: 38_000
				.saturating_add((16_396_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
				}
				fn make_claim(_a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 48_000
				.saturating_add((3_927_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 49_000
				.saturating_add((1_416_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 48_000
				.saturating_add((1_409_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(RocksDbWeight::get().reads(4 as Weight))
				.saturating_add(RocksDbWeight::get().writes(2 as Weight))
				}
				fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 30_000
				.saturating_add((2_838_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 30_000
				.saturating_add((7_497_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 30_000
				.saturating_add((1_689_000 as Weight).saturating_mul(c as Weight))
				// Standard Error: 30_000
				.saturating_add((1_780_000 as Weight).saturating_mul(d as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				}
				fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight {
				(0 as Weight)
				// Standard Error: 53_000
				.saturating_add((10_063_000 as Weight).saturating_mul(a as Weight))
				// Standard Error: 53_000
				.saturating_add((4_462_000 as Weight).saturating_mul(b as Weight))
				// Standard Error: 53_000
				.saturating_add((4_256_000 as Weight).saturating_mul(c as Weight))
				.saturating_add(RocksDbWeight::get().reads(3 as Weight))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				}
				fn create_catalog() -> Weight {
				(103_314_000 as Weight)
				.saturating_add(RocksDbWeight::get().reads(2 as Weight))
				.saturating_add(RocksDbWeight::get().writes(2 as Weight))
				}
				fn remove_catalog() -> Weight {
				(118_936_000 as Weight)
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes(1 as Weight))
				}
				fn add_dids_to_catalog(a: u32, ) -> Weight {
				(90_689_000 as Weight)
				// Standard Error: 11_000
				.saturating_add((7_644_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
				}
				fn remove_dids_from_catalog(a: u32, ) -> Weight {
				(114_819_000 as Weight)
				// Standard Error: 11_000
				.saturating_add((7_645_000 as Weight).saturating_mul(a as Weight))
				.saturating_add(RocksDbWeight::get().reads(1 as Weight))
				.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
				}
				}