// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_identity
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-08-12, STEPS: `[50, ]`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// ./borlaug
// benchmark
// --dev
// --pallet
// pallet_identity
// --extrinsic
// *
// --steps=50
// --repeat=5
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./weights/identity/weights.rs
// --template=./frame-weight-template.hbs


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_identity.
pub trait WeightInfo {
	fn register_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
	fn register_did_for(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
	fn update_did(a: u32, b: u32, c: u32, d: u32, e: u32, f: u32, ) -> Weight;
	fn replace_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
	fn manage_controllers(a: u32, b: u32, ) -> Weight;
	fn authorize_claim_consumers(a: u32, ) -> Weight;
	fn revoke_claim_consumers(a: u32, ) -> Weight;
	fn authorize_claim_issuers(a: u32, ) -> Weight;
	fn revoke_claim_issuers(a: u32, ) -> Weight;
	fn make_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
	fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
	fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight;
	fn create_catalog(a: u32, ) -> Weight;
	fn rename_catalog(a: u32, ) -> Weight;
	fn remove_catalog() -> Weight;
	fn add_dids_to_catalog(a: u32, b: u32, ) -> Weight;
	fn rename_did_in_catalog(a: u32, ) -> Weight;
	fn remove_dids_from_catalog(a: u32, ) -> Weight;
}

/// Weights for pallet_identity using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn register_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 471_000
			.saturating_add((1_808_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 527_000
			.saturating_add((11_537_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 43_000
			.saturating_add((2_270_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 43_000
			.saturating_add((15_427_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn register_did_for(_a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 646_000
			.saturating_add((11_166_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 53_000
			.saturating_add((1_918_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 53_000
			.saturating_add((16_206_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn update_did(a: u32, b: u32, c: u32, d: u32, _e: u32, f: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 609_000
			.saturating_add((1_035_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 684_000
			.saturating_add((12_975_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 56_000
			.saturating_add((2_851_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 56_000
			.saturating_add((17_648_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 56_000
			.saturating_add((10_870_000 as Weight).saturating_mul(f as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(f as Weight)))
	}
	fn replace_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 747_000
			.saturating_add((11_072_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 61_000
			.saturating_add((3_029_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 61_000
			.saturating_add((17_604_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 61_000
			.saturating_add((6_478_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn manage_controllers(a: u32, b: u32, ) -> Weight {
		(126_854_000 as Weight)
			// Standard Error: 129_000
			.saturating_add((15_927_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 129_000
			.saturating_add((15_779_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(b as Weight)))
	}
	fn authorize_claim_consumers(a: u32, ) -> Weight {
		(103_431_000 as Weight)
			// Standard Error: 95_000
			.saturating_add((16_721_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn revoke_claim_consumers(a: u32, ) -> Weight {
		(99_855_000 as Weight)
			// Standard Error: 66_000
			.saturating_add((15_925_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn authorize_claim_issuers(a: u32, ) -> Weight {
		(92_443_000 as Weight)
			// Standard Error: 69_000
			.saturating_add((16_597_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn revoke_claim_issuers(a: u32, ) -> Weight {
		(93_530_000 as Weight)
			// Standard Error: 102_000
			.saturating_add((16_124_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn make_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 153_000
			.saturating_add((1_297_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 14_000
			.saturating_add((2_318_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 171_000
			.saturating_add((2_950_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 14_000
			.saturating_add((1_614_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn attest_claim(a: u32, b: u32, _c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 32_000
			.saturating_add((2_511_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 32_000
			.saturating_add((6_298_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 32_000
			.saturating_add((2_845_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 22_000
			.saturating_add((6_105_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 270_000
			.saturating_add((6_537_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 22_000
			.saturating_add((4_407_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn create_catalog(a: u32, ) -> Weight {
		(109_860_000 as Weight)
			// Standard Error: 28_000
			.saturating_add((2_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn rename_catalog(a: u32, ) -> Weight {
		(97_827_000 as Weight)
			// Standard Error: 18_000
			.saturating_add((3_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn remove_catalog() -> Weight {
		(116_728_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn add_dids_to_catalog(a: u32, b: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 34_000
			.saturating_add((9_311_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 366_000
			.saturating_add((4_564_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
	}
	fn rename_did_in_catalog(_a: u32, ) -> Weight {
		(110_149_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn remove_dids_from_catalog(a: u32, ) -> Weight {
		(120_366_000 as Weight)
			// Standard Error: 15_000
			.saturating_add((7_803_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	fn register_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 471_000
			.saturating_add((1_808_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 527_000
			.saturating_add((11_537_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 43_000
			.saturating_add((2_270_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 43_000
			.saturating_add((15_427_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn register_did_for(_a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 646_000
			.saturating_add((11_166_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 53_000
			.saturating_add((1_918_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 53_000
			.saturating_add((16_206_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn update_did(a: u32, b: u32, c: u32, d: u32, _e: u32, f: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 609_000
			.saturating_add((1_035_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 684_000
			.saturating_add((12_975_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 56_000
			.saturating_add((2_851_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 56_000
			.saturating_add((17_648_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 56_000
			.saturating_add((10_870_000 as Weight).saturating_mul(f as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(f as Weight)))
	}
	fn replace_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 747_000
			.saturating_add((11_072_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 61_000
			.saturating_add((3_029_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 61_000
			.saturating_add((17_604_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 61_000
			.saturating_add((6_478_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn manage_controllers(a: u32, b: u32, ) -> Weight {
		(126_854_000 as Weight)
			// Standard Error: 129_000
			.saturating_add((15_927_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 129_000
			.saturating_add((15_779_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(b as Weight)))
	}
	fn authorize_claim_consumers(a: u32, ) -> Weight {
		(103_431_000 as Weight)
			// Standard Error: 95_000
			.saturating_add((16_721_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn revoke_claim_consumers(a: u32, ) -> Weight {
		(99_855_000 as Weight)
			// Standard Error: 66_000
			.saturating_add((15_925_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn authorize_claim_issuers(a: u32, ) -> Weight {
		(92_443_000 as Weight)
			// Standard Error: 69_000
			.saturating_add((16_597_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn revoke_claim_issuers(a: u32, ) -> Weight {
		(93_530_000 as Weight)
			// Standard Error: 102_000
			.saturating_add((16_124_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn make_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 153_000
			.saturating_add((1_297_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 14_000
			.saturating_add((2_318_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 171_000
			.saturating_add((2_950_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 14_000
			.saturating_add((1_614_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn attest_claim(a: u32, b: u32, _c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 32_000
			.saturating_add((2_511_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 32_000
			.saturating_add((6_298_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 32_000
			.saturating_add((2_845_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 22_000
			.saturating_add((6_105_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 270_000
			.saturating_add((6_537_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 22_000
			.saturating_add((4_407_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn create_catalog(a: u32, ) -> Weight {
		(109_860_000 as Weight)
			// Standard Error: 28_000
			.saturating_add((2_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn rename_catalog(a: u32, ) -> Weight {
		(97_827_000 as Weight)
			// Standard Error: 18_000
			.saturating_add((3_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn remove_catalog() -> Weight {
		(116_728_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn add_dids_to_catalog(a: u32, b: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 34_000
			.saturating_add((9_311_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 366_000
			.saturating_add((4_564_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
	}
	fn rename_did_in_catalog(_a: u32, ) -> Weight {
		(110_149_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn remove_dids_from_catalog(a: u32, ) -> Weight {
		(120_366_000 as Weight)
			// Standard Error: 15_000
			.saturating_add((7_803_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
	}
}
