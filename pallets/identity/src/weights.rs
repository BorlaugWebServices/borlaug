// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_identity
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-09-09, STEPS: `[30, ]`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// E:\qlikchain\borlaug\target\release\borlaug.exe
// benchmark
// --dev
// --pallet
// pallet_identity
// --extrinsic
// *
// --steps=30
// --repeat=5
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./pallets/identity/src/weights.rs
// --template=./.maintain/frame-weight-template.hbs


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_identity.
pub trait WeightInfo {
	fn register_did(b: u32, c: u32, d: u32, ) -> Weight;
	fn register_did_for(b: u32, c: u32, d: u32, ) -> Weight;
	fn update_did(b: u32, c: u32, d: u32, e: u32, f: u32, ) -> Weight;
	fn replace_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
	fn manage_controllers(a: u32, b: u32, ) -> Weight;
	fn authorize_claim_consumers(a: u32, ) -> Weight;
	fn revoke_claim_consumers(a: u32, ) -> Weight;
	fn authorize_claim_issuers(a: u32, ) -> Weight;
	fn revoke_claim_issuers(a: u32, ) -> Weight;
	fn make_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
	fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight;
	fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight;
	fn create_catalog() -> Weight;
	fn remove_catalog() -> Weight;
	fn add_dids_to_catalog(a: u32, ) -> Weight;
	fn remove_dids_from_catalog(a: u32, ) -> Weight;
}

/// Weights for pallet_identity using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn register_did(b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 247_000
			.saturating_add((2_645_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 244_000
			.saturating_add((2_446_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 123_000
			.saturating_add((8_372_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn register_did_for(b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 254_000
			.saturating_add((3_074_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 252_000
			.saturating_add((2_206_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 126_000
			.saturating_add((8_304_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn update_did(b: u32, c: u32, d: u32, e: u32, f: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 260_000
			.saturating_add((4_005_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 257_000
			.saturating_add((2_762_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 129_000
			.saturating_add((9_657_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 260_000
			.saturating_add((3_050_000 as Weight).saturating_mul(e as Weight))
			// Standard Error: 129_000
			.saturating_add((6_342_000 as Weight).saturating_mul(f as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(f as Weight)))
	}
	fn replace_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 209_000
			.saturating_add((3_581_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 207_000
			.saturating_add((2_863_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 104_000
			.saturating_add((9_715_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 104_000
			.saturating_add((2_293_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn manage_controllers(a: u32, b: u32, ) -> Weight {
		(43_465_000 as Weight)
			// Standard Error: 61_000
			.saturating_add((6_805_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 61_000
			.saturating_add((6_897_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(b as Weight)))
	}
	fn authorize_claim_consumers(a: u32, ) -> Weight {
		(29_589_000 as Weight)
			// Standard Error: 72_000
			.saturating_add((7_301_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn revoke_claim_consumers(a: u32, ) -> Weight {
		(25_743_000 as Weight)
			// Standard Error: 81_000
			.saturating_add((7_152_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn authorize_claim_issuers(a: u32, ) -> Weight {
		(32_417_000 as Weight)
			// Standard Error: 44_000
			.saturating_add((7_126_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn revoke_claim_issuers(a: u32, ) -> Weight {
		(28_467_000 as Weight)
			// Standard Error: 38_000
			.saturating_add((6_921_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn make_claim(_a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 33_000
			.saturating_add((1_842_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 34_000
			.saturating_add((703_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 33_000
			.saturating_add((723_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 31_000
			.saturating_add((1_389_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 31_000
			.saturating_add((3_675_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 32_000
			.saturating_add((817_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 31_000
			.saturating_add((839_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 40_000
			.saturating_add((5_678_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 41_000
			.saturating_add((2_639_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 40_000
			.saturating_add((2_485_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn create_catalog() -> Weight {
		(33_500_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn remove_catalog() -> Weight {
		(33_100_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn add_dids_to_catalog(a: u32, ) -> Weight {
		(32_735_000 as Weight)
			// Standard Error: 18_000
			.saturating_add((3_235_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
	}
	fn remove_dids_from_catalog(a: u32, ) -> Weight {
		(30_127_000 as Weight)
			// Standard Error: 13_000
			.saturating_add((3_185_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	fn register_did(b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 247_000
			.saturating_add((2_645_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 244_000
			.saturating_add((2_446_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 123_000
			.saturating_add((8_372_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn register_did_for(b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 254_000
			.saturating_add((3_074_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 252_000
			.saturating_add((2_206_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 126_000
			.saturating_add((8_304_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn update_did(b: u32, c: u32, d: u32, e: u32, f: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 260_000
			.saturating_add((4_005_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 257_000
			.saturating_add((2_762_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 129_000
			.saturating_add((9_657_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 260_000
			.saturating_add((3_050_000 as Weight).saturating_mul(e as Weight))
			// Standard Error: 129_000
			.saturating_add((6_342_000 as Weight).saturating_mul(f as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(f as Weight)))
	}
	fn replace_did(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 209_000
			.saturating_add((3_581_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 207_000
			.saturating_add((2_863_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 104_000
			.saturating_add((9_715_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 104_000
			.saturating_add((2_293_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(c as Weight)))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(d as Weight)))
	}
	fn manage_controllers(a: u32, b: u32, ) -> Weight {
		(43_465_000 as Weight)
			// Standard Error: 61_000
			.saturating_add((6_805_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 61_000
			.saturating_add((6_897_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(b as Weight)))
	}
	fn authorize_claim_consumers(a: u32, ) -> Weight {
		(29_589_000 as Weight)
			// Standard Error: 72_000
			.saturating_add((7_301_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn revoke_claim_consumers(a: u32, ) -> Weight {
		(25_743_000 as Weight)
			// Standard Error: 81_000
			.saturating_add((7_152_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn authorize_claim_issuers(a: u32, ) -> Weight {
		(32_417_000 as Weight)
			// Standard Error: 44_000
			.saturating_add((7_126_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn revoke_claim_issuers(a: u32, ) -> Weight {
		(28_467_000 as Weight)
			// Standard Error: 38_000
			.saturating_add((6_921_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn make_claim(_a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 33_000
			.saturating_add((1_842_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 34_000
			.saturating_add((703_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 33_000
			.saturating_add((723_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn attest_claim(a: u32, b: u32, c: u32, d: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 31_000
			.saturating_add((1_389_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 31_000
			.saturating_add((3_675_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 32_000
			.saturating_add((817_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 31_000
			.saturating_add((839_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn revoke_attestation(a: u32, b: u32, c: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 40_000
			.saturating_add((5_678_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 41_000
			.saturating_add((2_639_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 40_000
			.saturating_add((2_485_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn create_catalog() -> Weight {
		(33_500_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn remove_catalog() -> Weight {
		(33_100_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn add_dids_to_catalog(a: u32, ) -> Weight {
		(32_735_000 as Weight)
			// Standard Error: 18_000
			.saturating_add((3_235_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
	}
	fn remove_dids_from_catalog(a: u32, ) -> Weight {
		(30_127_000 as Weight)
			// Standard Error: 13_000
			.saturating_add((3_185_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
	}
}
